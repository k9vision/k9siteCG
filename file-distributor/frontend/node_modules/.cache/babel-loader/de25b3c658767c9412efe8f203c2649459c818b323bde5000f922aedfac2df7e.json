{"ast":null,"code":"var _jsxFileName = \"/home/kirlewubuntu/Downloads/PROJECTCOLLABS/gee/file-distributor/frontend/src/components/RecipientManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Paper, Typography, TextField, Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, Chip, Box, Tabs, Tab, Grid } from '@mui/material';\nimport { Add, Delete, Edit, Email, Phone, Group, Upload } from '@mui/icons-material';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecipientManager() {\n  _s();\n  const [recipients, setRecipients] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [currentRecipient, setCurrentRecipient] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    groups: []\n  });\n  const [editingId, setEditingId] = useState(null);\n  const [tabValue, setTabValue] = useState(0);\n  const [newGroupName, setNewGroupName] = useState('');\n  useEffect(() => {\n    loadRecipients();\n    loadGroups();\n  }, []);\n  const loadRecipients = () => {\n    const savedRecipients = localStorage.getItem('recipients');\n    if (savedRecipients) {\n      setRecipients(JSON.parse(savedRecipients));\n    }\n  };\n  const loadGroups = () => {\n    const savedGroups = localStorage.getItem('groups');\n    if (savedGroups) {\n      setGroups(JSON.parse(savedGroups));\n    } else {\n      setGroups(['All', 'VIP', 'Marketing', 'Support']);\n    }\n  };\n  const saveRecipients = newRecipients => {\n    localStorage.setItem('recipients', JSON.stringify(newRecipients));\n    setRecipients(newRecipients);\n  };\n  const handleOpenDialog = (recipient = null) => {\n    if (recipient) {\n      setCurrentRecipient(recipient);\n      setEditingId(recipient.id);\n    } else {\n      setCurrentRecipient({\n        name: '',\n        email: '',\n        phone: '',\n        groups: []\n      });\n      setEditingId(null);\n    }\n    setOpenDialog(true);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setCurrentRecipient({\n      name: '',\n      email: '',\n      phone: '',\n      groups: []\n    });\n    setEditingId(null);\n  };\n  const handleSaveRecipient = () => {\n    if (!currentRecipient.name || !currentRecipient.email && !currentRecipient.phone) {\n      toast.error('Please provide name and at least email or phone');\n      return;\n    }\n    let newRecipients;\n    if (editingId) {\n      newRecipients = recipients.map(r => r.id === editingId ? {\n        ...currentRecipient,\n        id: editingId\n      } : r);\n    } else {\n      newRecipients = [...recipients, {\n        ...currentRecipient,\n        id: Date.now().toString()\n      }];\n    }\n    saveRecipients(newRecipients);\n    toast.success(editingId ? 'Recipient updated' : 'Recipient added');\n    handleCloseDialog();\n  };\n  const handleDeleteRecipient = id => {\n    const newRecipients = recipients.filter(r => r.id !== id);\n    saveRecipients(newRecipients);\n    toast.success('Recipient deleted');\n  };\n  const handleImportCSV = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const text = e.target.result;\n        const lines = text.split('\\n');\n        const headers = lines[0].split(',').map(h => h.trim());\n        const imported = lines.slice(1).filter(line => line.trim()).map(line => {\n          const values = line.split(',').map(v => v.trim());\n          const recipient = {\n            id: Date.now().toString() + Math.random(),\n            groups: ['All']\n          };\n          headers.forEach((header, index) => {\n            const value = values[index];\n            if (header.toLowerCase().includes('name')) {\n              recipient.name = value;\n            } else if (header.toLowerCase().includes('email')) {\n              recipient.email = value;\n            } else if (header.toLowerCase().includes('phone')) {\n              recipient.phone = value;\n            }\n          });\n          return recipient;\n        }).filter(r => r.name && (r.email || r.phone));\n        const newRecipients = [...recipients, ...imported];\n        saveRecipients(newRecipients);\n        toast.success(`Imported ${imported.length} recipients`);\n      } catch (error) {\n        toast.error('Failed to import CSV file');\n      }\n    };\n    reader.readAsText(file);\n  };\n  const handleAddGroup = () => {\n    if (newGroupName && !groups.includes(newGroupName)) {\n      const newGroups = [...groups, newGroupName];\n      localStorage.setItem('groups', JSON.stringify(newGroups));\n      setGroups(newGroups);\n      setNewGroupName('');\n      toast.success('Group added');\n    }\n  };\n  const handleGroupToggle = group => {\n    const currentGroups = currentRecipient.groups || [];\n    const newGroups = currentGroups.includes(group) ? currentGroups.filter(g => g !== group) : [...currentGroups, group];\n    setCurrentRecipient({\n      ...currentRecipient,\n      groups: newGroups\n    });\n  };\n  const exportRecipients = () => {\n    const csv = ['Name,Email,Phone,Groups', ...recipients.map(r => `${r.name},${r.email || ''},${r.phone || ''},\"${(r.groups || []).join(', ')}\"`)].join('\\n');\n    const blob = new Blob([csv], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'recipients.csv';\n    a.click();\n    URL.revokeObjectURL(url);\n    toast.success('Recipients exported');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Recipient Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabValue,\n        onChange: (e, v) => setTabValue(v),\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Individual Recipients\",\n          icon: /*#__PURE__*/_jsxDEV(Email, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Groups\",\n          icon: /*#__PURE__*/_jsxDEV(Group, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), tabValue === 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 26\n          }, this),\n          onClick: () => handleOpenDialog(),\n          children: \"Add Recipient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          component: \"label\",\n          startIcon: /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 26\n          }, this),\n          children: [\"Import CSV\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".csv\",\n            hidden: true,\n            onChange: handleImportCSV\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: exportRecipients,\n          disabled: recipients.length === 0,\n          children: \"Export CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Groups\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: recipients.map(recipient => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: recipient.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: recipient.email && /*#__PURE__*/_jsxDEV(Chip, {\n                  icon: /*#__PURE__*/_jsxDEV(Email, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 33\n                  }, this),\n                  label: recipient.email,\n                  size: \"small\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: recipient.phone && /*#__PURE__*/_jsxDEV(Chip, {\n                  icon: /*#__PURE__*/_jsxDEV(Phone, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 33\n                  }, this),\n                  label: recipient.phone,\n                  size: \"small\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 0.5,\n                    flexWrap: 'wrap'\n                  },\n                  children: (recipient.groups || []).map(group => /*#__PURE__*/_jsxDEV(Chip, {\n                    label: group,\n                    size: \"small\",\n                    color: \"primary\"\n                  }, group, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleOpenDialog(recipient),\n                  children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteRecipient(recipient.id),\n                  children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this)]\n            }, recipient.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), tabValue === 1 && /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"New Group Name\",\n            value: newGroupName,\n            onChange: e => setNewGroupName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            onClick: handleAddGroup,\n            sx: {\n              height: '56px'\n            },\n            children: \"Add Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Available Groups\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1,\n            flexWrap: 'wrap'\n          },\n          children: groups.map(group => /*#__PURE__*/_jsxDEV(Chip, {\n            label: `${group} (${recipients.filter(r => (r.groups || []).includes(group)).length} recipients)`,\n            color: \"primary\",\n            variant: \"outlined\"\n          }, group, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: editingId ? 'Edit Recipient' : 'Add Recipient'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Name\",\n          value: currentRecipient.name,\n          onChange: e => setCurrentRecipient({\n            ...currentRecipient,\n            name: e.target.value\n          }),\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Email\",\n          type: \"email\",\n          value: currentRecipient.email,\n          onChange: e => setCurrentRecipient({\n            ...currentRecipient,\n            email: e.target.value\n          }),\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Phone\",\n          value: currentRecipient.phone,\n          onChange: e => setCurrentRecipient({\n            ...currentRecipient,\n            phone: e.target.value\n          }),\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Groups\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 1,\n              flexWrap: 'wrap'\n            },\n            children: groups.map(group => /*#__PURE__*/_jsxDEV(Chip, {\n              label: group,\n              onClick: () => handleGroupToggle(group),\n              color: (currentRecipient.groups || []).includes(group) ? 'primary' : 'default',\n              variant: (currentRecipient.groups || []).includes(group) ? 'filled' : 'outlined'\n            }, group, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveRecipient,\n          variant: \"contained\",\n          children: editingId ? 'Update' : 'Add'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(RecipientManager, \"sZMBS2Hc6YAX6qKAVMXAXr5Isl0=\");\n_c = RecipientManager;\nexport default RecipientManager;\nvar _c;\n$RefreshReg$(_c, \"RecipientManager\");","map":{"version":3,"names":["React","useState","useEffect","Paper","Typography","TextField","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","Chip","Box","Tabs","Tab","Grid","Add","Delete","Edit","Email","Phone","Group","Upload","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipientManager","_s","recipients","setRecipients","groups","setGroups","openDialog","setOpenDialog","currentRecipient","setCurrentRecipient","name","email","phone","editingId","setEditingId","tabValue","setTabValue","newGroupName","setNewGroupName","loadRecipients","loadGroups","savedRecipients","localStorage","getItem","JSON","parse","savedGroups","saveRecipients","newRecipients","setItem","stringify","handleOpenDialog","recipient","id","handleCloseDialog","handleSaveRecipient","error","map","r","Date","now","toString","success","handleDeleteRecipient","filter","handleImportCSV","event","file","target","files","reader","FileReader","onload","e","text","result","lines","split","headers","h","trim","imported","slice","line","values","v","Math","random","forEach","header","index","value","toLowerCase","includes","length","readAsText","handleAddGroup","newGroups","handleGroupToggle","group","currentGroups","g","exportRecipients","csv","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","onChange","label","icon","display","gap","startIcon","onClick","component","accept","hidden","disabled","align","size","flexWrap","color","container","spacing","item","xs","fullWidth","height","open","onClose","maxWidth","margin","mt","_c","$RefreshReg$"],"sources":["/home/kirlewubuntu/Downloads/PROJECTCOLLABS/gee/file-distributor/frontend/src/components/RecipientManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Chip,\n  Box,\n  Tabs,\n  Tab,\n  Grid\n} from '@mui/material';\nimport {\n  Add,\n  Delete,\n  Edit,\n  Email,\n  Phone,\n  Group,\n  Upload\n} from '@mui/icons-material';\nimport { toast } from 'react-toastify';\n\nfunction RecipientManager() {\n  const [recipients, setRecipients] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [currentRecipient, setCurrentRecipient] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    groups: []\n  });\n  const [editingId, setEditingId] = useState(null);\n  const [tabValue, setTabValue] = useState(0);\n  const [newGroupName, setNewGroupName] = useState('');\n\n  useEffect(() => {\n    loadRecipients();\n    loadGroups();\n  }, []);\n\n  const loadRecipients = () => {\n    const savedRecipients = localStorage.getItem('recipients');\n    if (savedRecipients) {\n      setRecipients(JSON.parse(savedRecipients));\n    }\n  };\n\n  const loadGroups = () => {\n    const savedGroups = localStorage.getItem('groups');\n    if (savedGroups) {\n      setGroups(JSON.parse(savedGroups));\n    } else {\n      setGroups(['All', 'VIP', 'Marketing', 'Support']);\n    }\n  };\n\n  const saveRecipients = (newRecipients) => {\n    localStorage.setItem('recipients', JSON.stringify(newRecipients));\n    setRecipients(newRecipients);\n  };\n\n  const handleOpenDialog = (recipient = null) => {\n    if (recipient) {\n      setCurrentRecipient(recipient);\n      setEditingId(recipient.id);\n    } else {\n      setCurrentRecipient({\n        name: '',\n        email: '',\n        phone: '',\n        groups: []\n      });\n      setEditingId(null);\n    }\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setCurrentRecipient({\n      name: '',\n      email: '',\n      phone: '',\n      groups: []\n    });\n    setEditingId(null);\n  };\n\n  const handleSaveRecipient = () => {\n    if (!currentRecipient.name || (!currentRecipient.email && !currentRecipient.phone)) {\n      toast.error('Please provide name and at least email or phone');\n      return;\n    }\n\n    let newRecipients;\n    if (editingId) {\n      newRecipients = recipients.map(r =>\n        r.id === editingId ? { ...currentRecipient, id: editingId } : r\n      );\n    } else {\n      newRecipients = [...recipients, {\n        ...currentRecipient,\n        id: Date.now().toString()\n      }];\n    }\n\n    saveRecipients(newRecipients);\n    toast.success(editingId ? 'Recipient updated' : 'Recipient added');\n    handleCloseDialog();\n  };\n\n  const handleDeleteRecipient = (id) => {\n    const newRecipients = recipients.filter(r => r.id !== id);\n    saveRecipients(newRecipients);\n    toast.success('Recipient deleted');\n  };\n\n  const handleImportCSV = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const text = e.target.result;\n        const lines = text.split('\\n');\n        const headers = lines[0].split(',').map(h => h.trim());\n\n        const imported = lines.slice(1)\n          .filter(line => line.trim())\n          .map(line => {\n            const values = line.split(',').map(v => v.trim());\n            const recipient = {\n              id: Date.now().toString() + Math.random(),\n              groups: ['All']\n            };\n\n            headers.forEach((header, index) => {\n              const value = values[index];\n              if (header.toLowerCase().includes('name')) {\n                recipient.name = value;\n              } else if (header.toLowerCase().includes('email')) {\n                recipient.email = value;\n              } else if (header.toLowerCase().includes('phone')) {\n                recipient.phone = value;\n              }\n            });\n\n            return recipient;\n          })\n          .filter(r => r.name && (r.email || r.phone));\n\n        const newRecipients = [...recipients, ...imported];\n        saveRecipients(newRecipients);\n        toast.success(`Imported ${imported.length} recipients`);\n      } catch (error) {\n        toast.error('Failed to import CSV file');\n      }\n    };\n\n    reader.readAsText(file);\n  };\n\n  const handleAddGroup = () => {\n    if (newGroupName && !groups.includes(newGroupName)) {\n      const newGroups = [...groups, newGroupName];\n      localStorage.setItem('groups', JSON.stringify(newGroups));\n      setGroups(newGroups);\n      setNewGroupName('');\n      toast.success('Group added');\n    }\n  };\n\n  const handleGroupToggle = (group) => {\n    const currentGroups = currentRecipient.groups || [];\n    const newGroups = currentGroups.includes(group)\n      ? currentGroups.filter(g => g !== group)\n      : [...currentGroups, group];\n\n    setCurrentRecipient({ ...currentRecipient, groups: newGroups });\n  };\n\n  const exportRecipients = () => {\n    const csv = [\n      'Name,Email,Phone,Groups',\n      ...recipients.map(r =>\n        `${r.name},${r.email || ''},${r.phone || ''},\"${(r.groups || []).join(', ')}\"`\n      )\n    ].join('\\n');\n\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'recipients.csv';\n    a.click();\n    URL.revokeObjectURL(url);\n    toast.success('Recipients exported');\n  };\n\n  return (\n    <Box sx={{ p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Recipient Manager\n      </Typography>\n\n      <Paper sx={{ mb: 3 }}>\n        <Tabs value={tabValue} onChange={(e, v) => setTabValue(v)}>\n          <Tab label=\"Individual Recipients\" icon={<Email />} />\n          <Tab label=\"Groups\" icon={<Group />} />\n        </Tabs>\n      </Paper>\n\n      {tabValue === 0 && (\n        <>\n          <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\n            <Button\n              variant=\"contained\"\n              startIcon={<Add />}\n              onClick={() => handleOpenDialog()}\n            >\n              Add Recipient\n            </Button>\n            <Button\n              variant=\"outlined\"\n              component=\"label\"\n              startIcon={<Upload />}\n            >\n              Import CSV\n              <input\n                type=\"file\"\n                accept=\".csv\"\n                hidden\n                onChange={handleImportCSV}\n              />\n            </Button>\n            <Button\n              variant=\"outlined\"\n              onClick={exportRecipients}\n              disabled={recipients.length === 0}\n            >\n              Export CSV\n            </Button>\n          </Box>\n\n          <TableContainer component={Paper}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Email</TableCell>\n                  <TableCell>Phone</TableCell>\n                  <TableCell>Groups</TableCell>\n                  <TableCell align=\"right\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {recipients.map((recipient) => (\n                  <TableRow key={recipient.id}>\n                    <TableCell>{recipient.name}</TableCell>\n                    <TableCell>\n                      {recipient.email && (\n                        <Chip\n                          icon={<Email />}\n                          label={recipient.email}\n                          size=\"small\"\n                          variant=\"outlined\"\n                        />\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      {recipient.phone && (\n                        <Chip\n                          icon={<Phone />}\n                          label={recipient.phone}\n                          size=\"small\"\n                          variant=\"outlined\"\n                        />\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      <Box sx={{ display: 'flex', gap: 0.5, flexWrap: 'wrap' }}>\n                        {(recipient.groups || []).map((group) => (\n                          <Chip\n                            key={group}\n                            label={group}\n                            size=\"small\"\n                            color=\"primary\"\n                          />\n                        ))}\n                      </Box>\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton onClick={() => handleOpenDialog(recipient)}>\n                        <Edit />\n                      </IconButton>\n                      <IconButton onClick={() => handleDeleteRecipient(recipient.id)}>\n                        <Delete />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </>\n      )}\n\n      {tabValue === 1 && (\n        <Box>\n          <Grid container spacing={2} sx={{ mb: 3 }}>\n            <Grid item xs={8}>\n              <TextField\n                fullWidth\n                label=\"New Group Name\"\n                value={newGroupName}\n                onChange={(e) => setNewGroupName(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={4}>\n              <Button\n                fullWidth\n                variant=\"contained\"\n                onClick={handleAddGroup}\n                sx={{ height: '56px' }}\n              >\n                Add Group\n              </Button>\n            </Grid>\n          </Grid>\n\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Available Groups\n            </Typography>\n            <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n              {groups.map((group) => (\n                <Chip\n                  key={group}\n                  label={`${group} (${recipients.filter(r => (r.groups || []).includes(group)).length} recipients)`}\n                  color=\"primary\"\n                  variant=\"outlined\"\n                />\n              ))}\n            </Box>\n          </Paper>\n        </Box>\n      )}\n\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>\n          {editingId ? 'Edit Recipient' : 'Add Recipient'}\n        </DialogTitle>\n        <DialogContent>\n          <TextField\n            fullWidth\n            label=\"Name\"\n            value={currentRecipient.name}\n            onChange={(e) => setCurrentRecipient({ ...currentRecipient, name: e.target.value })}\n            margin=\"normal\"\n          />\n          <TextField\n            fullWidth\n            label=\"Email\"\n            type=\"email\"\n            value={currentRecipient.email}\n            onChange={(e) => setCurrentRecipient({ ...currentRecipient, email: e.target.value })}\n            margin=\"normal\"\n          />\n          <TextField\n            fullWidth\n            label=\"Phone\"\n            value={currentRecipient.phone}\n            onChange={(e) => setCurrentRecipient({ ...currentRecipient, phone: e.target.value })}\n            margin=\"normal\"\n          />\n          <Box sx={{ mt: 2 }}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              Groups\n            </Typography>\n            <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n              {groups.map((group) => (\n                <Chip\n                  key={group}\n                  label={group}\n                  onClick={() => handleGroupToggle(group)}\n                  color={(currentRecipient.groups || []).includes(group) ? 'primary' : 'default'}\n                  variant={(currentRecipient.groups || []).includes(group) ? 'filled' : 'outlined'}\n                />\n              ))}\n            </Box>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>Cancel</Button>\n          <Button onClick={handleSaveRecipient} variant=\"contained\">\n            {editingId ? 'Update' : 'Add'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n\nexport default RecipientManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}